{"version":3,"sources":["index.js"],"names":["Square","props","className","isHL","onClick","value","Board","i","this","hightLight","indexOf","squares","rendercols","col","push","renderSquare","rendersquares","squarenum","row","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","isAscend","slice","length","calculateWinner","player","setState","concat","locations","step","status","current","winner","moves","map","move","desc","jumpTo","includes","handleClick","reverse","reverseorder","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1336107a.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className= {props.isHL ? \"square winner\" :  \"square\"}\r\n            onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    if (this.props.hightLight.indexOf(i) !== -1){\r\n      return (\r\n        <Square\r\n        isHL = {true}\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n        />\r\n      )\r\n    }\r\n    else{\r\n      return (\r\n        <Square\r\n          isHL = {false}\r\n          value={this.props.squares[i]}\r\n          onClick={() => this.props.onClick(i)}\r\n        />\r\n      );\r\n    } \r\n  }\r\n\r\n  col(i){\r\n    var rendercols = [];\r\n    for(var col = 0; col < 3; col++){\r\n      rendercols.push(this.renderSquare(i));\r\n      i++;\r\n    }\r\n    return(\r\n      rendercols\r\n    );\r\n  }\r\n  render() {\r\n    //3. 改寫 Board，使用兩個 loop 建立方格而不是寫死它。\r\n    var rendersquares = [];\r\n    var squarenum = 0;\r\n    for (var row = 0; row < 3; row++){\r\n      rendersquares.push(<div className=\"board-row\">{this.col(squarenum)}</div>);\r\n      squarenum += 3;\r\n    }\r\n    return (\r\n      <div>{rendersquares}</div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n        }\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      isAscend: true\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    //將座標存成陣列儲存\r\n    const locations = [\r\n      [1, 1],\r\n      [2, 1],\r\n      [3, 1],\r\n      [1, 2],\r\n      [2, 2],\r\n      [3, 2],\r\n      [1, 3],\r\n      [2, 3],\r\n      [3, 3]\r\n    ];\r\n    const isWin = calculateWinner(squares)\r\n    if (isWin.player || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n          locations: locations[i]\r\n        }\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0\r\n    });\r\n  }\r\n  \r\n  reverseorder(){\r\n    this.setState({\r\n      isAscend: !this.state.isAscend\r\n    })\r\n  }\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        //1. 在歷史動作列表中，用（欄，列）的格式來顯示每個動作的位置。\r\n        'Go to move #' + move + ' at [' + history[move].locations+']' :\r\n        'Go to game start';\r\n        //2. 在動作列表中，將目前被選取的項目加粗。\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>\r\n            {move === this.state.stepNumber ? <strong>{desc}</strong> : desc}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner.player) {\r\n      status = \"Winner: \" + winner.player;\r\n    }\r\n    else if(!current.squares.includes(null)){\r\n      status = \"【 Draw 平手】\";\r\n    }\r\n    else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares = {current.squares}\r\n            onClick = {i => this.handleClick(i)}\r\n            winner = {winner.player}\r\n            hightLight = {winner.hightLight}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{this.state.isAscend ? moves : moves.reverse()}</ol>\r\n          <ol>目前排序方式: {this.state.isAscend ? \"Ascending\" : \"Descending\"}</ol>\r\n          <ol><button onClick={() => this.reverseorder()}>\r\n            變更排序方式\r\n          </button></ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return {\r\n        player:squares[a],\r\n        hightLight: [a,b,c]\r\n      };\r\n    }\r\n  }\r\n  return {\r\n    player : null,\r\n    hightLight : []\r\n  };\r\n}\r\n"],"sourceRoot":""}